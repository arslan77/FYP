@model Attendance_System.ViewModels.NewClass

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Class</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

      

        <div class="form-group">
            @Html.LabelFor(model => model.sessionID, "sessionID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("sessionID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.sessionID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sectionID, "sectionID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
             @*   @Html.DropDownList("sectionID", null, htmlAttributes: new { @class = "form-control" })
               *@ 
                <select id="section" name="section">
                </select>
                @Html.ValidationMessageFor(model => model.sectionID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isMorning, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isMorning)
                    @Html.ValidationMessageFor(model => model.isMorning, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isTheory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isTheory)
                    @Html.ValidationMessageFor(model => model.isTheory, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isSupply, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isSupply)
                    @Html.ValidationMessageFor(model => model.isSupply, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Students, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Students)
                    @Html.ValidationMessageFor(model => model.Students, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $("#section").prop("disabled", true);
            $("#sessionID").change(function () {
                if ($("#sessionID").val() != "Please select") {
                    var options = {};
                    options.url = "/Classes/getSection";
                    options.type = "POST";
                    options.data = JSON.stringify({ sessionID: $("#sessionID").val() });
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (section) {

                        $("#section").empty();
                        for (var i = 0; i < section.length; i++) {
                            $("#section").append("<option value= "+section[i].sectionID+">" + section[i].name + "</option>");
                        }
                        $("#section").prop("disabled", false);
                    };
                    options.error = function () { alert("Error retrieving states!"); };
                    $.ajax(options);
                }
                else {
                    $("#section").empty();
                    $("#section").prop("disabled", true);
                }
            });
        });
    </script>
}
